sourceSets {
    integrationTest {
        java {
            srcDir "src/integrationTest/java"
        }
        resources {
            srcDir "src/integrationTest/resources"
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation, testImplementation
    integrationTestCompileOnly.extendsFrom compileOnly
    integrationTestAnnotationProcessor.extendsFrom annotationProcessor
    integrationTestRuntime.extendsFrom runtimeOnly, testRuntimeOnly
}

dependencies {
    integrationTestImplementation(sourceSets.main.output)
    integrationTestImplementation(sourceSets.test.output)
}

task runIntegrationTest(type:Test) {

    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = "Runs the integration tests."

    maxHeapSize = "1024m"

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    getBinaryResultsDirectory().set(file("$buildDir/integration-test-results/binary/integration-test"))

    reports {
        html.destination file("$buildDir/reports/integration-test")
        junitXml.destination file("$buildDir/integration-test-results")
    }

    mustRunAfter(tasks["test"])
}

gradle.projectsEvaluated {
    List<String> quickTasks = new ArrayList<String>()

    gradle.rootProject.allprojects.forEach { project ->
        quickTasks.addAll(project.tasks.toList().stream().filter { it.name == "test" })
    }

    quickTasks.forEach { runIntegrationTest.mustRunAfter(it) }
}