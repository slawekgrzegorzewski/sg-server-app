scalar UUID
scalar BigDecimal
scalar LocalDate

type Query {
    monthKPIR(year: Int!, month: Int!): [KPiREntry]
}

type Mutation{
    addKPiREntry(input: KPiREntryInput):KPiREntry
}

type DomainSimple {
    id: Int!,
    name: String!
}

type KPiREntry {
    publicId: UUID!,
    domain: DomainSimple!,
    entryDate: LocalDate!,
    entryOrder: Int!,
    bookingNumber: String!,
    counterparty: String!,
    counterpartyAddress: String!,
    description: String!,
    providedGoodsAndServicesValue: BigDecimal!,
    otherIncomes: BigDecimal!,
    totalIncomes: BigDecimal!,
    purchasedGoodsAndMaterialsValue: BigDecimal!,
    additionalCostOfPurchase: BigDecimal!,
    remunerationInCashOrInKind: BigDecimal!,
    otherExpenses: BigDecimal!,
    totalExpenses: BigDecimal!,
    comments: String!
}

input KPiREntryInput {
    publicId: UUID,
    entryDate: LocalDate!,
    entryOrder: Int!,
    bookingNumber: String!,
    counterparty: String!,
    counterpartyAddress: String!,
    description: String!,
    providedGoodsAndServicesValue: BigDecimal!,
    otherIncomes: BigDecimal!,
    totalIncomes: BigDecimal!,
    purchasedGoodsAndMaterialsValue: BigDecimal!,
    additionalCostOfPurchase: BigDecimal!,
    remunerationInCashOrInKind: BigDecimal!,
    otherExpenses: BigDecimal!,
    totalExpenses: BigDecimal!,
    comments: String!
}