version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1.2

jobs:
  updateInfrastructure:
    docker:
      - image: cimg/openjdk:21.0.0
    steps:
      - checkout
      - run: gradle infrastructureRpi4
      - run: ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "mkdir /home/$SSH_USER/Application"
      - run: scp -o "StrictHostKeyChecking no" build/distributions/infrastructureRpi4.zip $SSH_USER@$SSH_HOST:/home/$SSH_USER/Application
      - run: ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/Application && unzip dockerRpi4.zip -d tmp && cd tmp && dos2unix *.sh && chmod +x *.sh && ./setup.sh $SSH_USER $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY $AWS_CW_ACCESS_KEY_ID $AWS_CW_SECRET_ACCESS_KEY $SG_DB_PASSWORD"

  build:
    docker:
      - image: cimg/openjdk:21.0.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ checksum "build.gradle.kts" }}
      - run: gradle clean build infrastructureRpi4
      - save_cache:
          paths:
            - ~/.m2
            - build/distributions/dockerRpi4.zip
            - build/distributions/infrastructureRpi4.zip
          key: cache-{{ checksum "build.gradle.kts" }}

  createAndPushImages:
    docker:
      - image: cimg/openjdk:21.0.0
    steps:
      - checkout
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                keys:
                  - cache-{{ checksum "build.gradle.kts" }}
            - setup_remote_docker
            - aws-ecr/build-and-push-image:
                repo: 'backend'
                tag: latest-rpi4
                assume-web-identity: false
                attach-workspace: false
                create-repo: false
                docker-login: false
                public-registry: false
                push-image: true
                remote-docker-layer-caching: false
                repo-scan-on-push: true
                setup-remote-docker: false
                skip-when-tags-exist: false
                dockerfile: docker/production_home/Dockerfile
                platform: linux/arm64
                region: eu-central-1
            - run:
                name: remove existing Docker context
                command: docker context rm -f builder
            - aws-ecr/build-and-push-image:
                repo: 'backend'
                tag: latest-debug-rpi4
                assume-web-identity: false
                attach-workspace: false
                create-repo: false
                docker-login: false
                public-registry: false
                push-image: true
                remote-docker-layer-caching: false
                repo-scan-on-push: true
                setup-remote-docker: false
                skip-when-tags-exist: false
                dockerfile: docker/production_home/Dockerfile-debug
                platform: linux/arm64
                region: eu-central-1

  updateApplication:
    docker:
      - image: cimg/openjdk:21.0.0
    steps:
      - checkout
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - restore_cache:
                keys:
                  - cache-{{ checksum "build.gradle.kts" }}
            - run: scp -o "StrictHostKeyChecking no" build/distributions/dockerRpi4.zip $SSH_USER@$SSH_HOST:/home/$SSH_USER/Application
            - run: ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/Application && unzip dockerRpi4.zip -d tmp && cd tmp/setup && dos2unix deploy_files.sh && chmod +x deploy_files.sh && ./deploy_files.sh"
            - run: ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/Application/management && ./start.sh"

workflows:
  deploy:
    jobs:
      - build
      - createAndPushImages
      - updateApplication

  infrastructure:
    triggers:
      - schedule:
          cron: "-"
          filters:
            branches:
              only:
                - not_existing_branch_to_disable_auto_triggering
    jobs:
      - build
      - updateInfrastructure