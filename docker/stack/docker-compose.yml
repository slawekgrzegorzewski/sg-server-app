
version: '3.8'

services:

  backend:
    image: grzegorzewski.org:5000/backend:latest
    container_name: backend
    ports:
      - 8080:8080
    environment:
      spring_profiles_active: http,S3Storage
    configs:
      - source: application.yml
        target: /app/application.yml
    secrets:
      - jwt_secret_code
      - sendgrid_api_key
      - nordigen_secret_id
      - nordigen_secret_key
      - postgres_password
      - aws_access_key_id
      - aws_secret_access_key
      - aws_region
      - random_org_api_key
    volumes:
      - ./config/logback.xml:/app/logback.xml:ro
      - $HOME/Application/docker/volumes/logs:/app/logs/
      - $HOME/Application/bibleFiles:/app/bibleFiles/
    depends_on:
      - database
      - registry-server
    deploy:
      placement:
        constraints:
          - node.hostname==rpi5

  database:
    logging:
      driver: awslogs
      options:
        awslogs-region: eu-central-1
        awslogs-group: app
        awslogs-stream: db
        awslogs-create-group: 'true'
    image: postgres:15.6
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    deploy:
      placement:
        constraints:
          - node.hostname==rpi4
    secrets:
      - postgres_password
    volumes:
      - $HOME/Application/docker/volumes/postgres:/var/lib/postgresql/data
      - $HOME/Application/docker/volumes/database_backup:/backup

  gateway:
    logging:
      driver: awslogs
      options:
        awslogs-region: eu-central-1
        awslogs-group: app
        awslogs-stream: client
        awslogs-create-group: 'true'
    image: nginx:1.25.4-bookworm
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    secrets:
      - sgapplication.crt
      - sgapplication.key
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - $HOME/Application/fe:/usr/share/nginx:ro
    depends_on:
      - app
    deploy:
      placement:
        constraints:
          - node.hostname==rpi3

  registry-server:
    image: registry:2.8.3
    container_name: registry
    ports:
      - 5000:5000
    volumes:
      - $HOME/Application/stack/registry/data:/var/lib/registry
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '[http://rpi5:4080]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
    restart: always

  registry-ui:
    image: joxit/docker-registry-ui:2.5.7
    ports:
      - 4080:80
    environment:
      REGISTRY_TITLE: My Private Docker Registry
      REGISTRY_URL: http://rpi5:5000
      SINGLE_REGISTRY: 'true'
    depends_on:
      - registry

configs:
  application.yml:
    template_driver: golang
    file: ./config/application.yml.tmpl
    name: myapp.application.yml${APPLICATION_YML_VERSION:-0}
    
secrets:
  jwt_secret_code:
    external: true
  sendgrid_api_key:
    external: true
  nordigen_secret_id:
    external: true
  nordigen_secret_key:
    external: true
  postgres_password:
    external: true
  aws_access_key_id:
    external: true
  aws_secret_access_key:
    external: true
  aws_region:
    external: true
  random_org_api_key:
    external: true
  sgapplication.crt:
    file: $HOME/Application/secrets/certs/sgapplication.crt
  sgapplication.key:
    file: $HOME/Application/secrets/certs/sgapplication.key